from telegram import Update, ChatMember
from telegram.ext import ContextTypes
from telegram.helpers import mention_html
from core.check_group_chat import only_group_chats


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥—Ä—É–ø–ø–µ, —Å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–º –≤—ã–≤–æ–¥–æ–º —á–µ—Ä–µ–∑ print
@only_group_chats
async def welcome_join(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –û—Ç–ª–∞–¥–∫–∞: –≤—ã–≤–æ–¥–∏–º —Å–æ–±—ã—Ç–∏—è
    print("[welcome_join] handler invoked")
    chat_member = getattr(update, 'chat_member', None)
    print(f"[welcome_join] update.chat_member: {chat_member}")
    if not chat_member:
        print("[welcome_join] –ù–µ—Ç chat_member, –≤—ã—Ö–æ–¥–∏–º")
        return

    old_status = chat_member.old_chat_member.status
    new_status = chat_member.new_chat_member.status
    chat = update.effective_chat
    thread_id = getattr(chat, 'message_thread_id', None)
    print(f"[welcome_join] chat_id={chat.id}, thread_id={thread_id}, old_status={old_status}, new_status={new_status}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º: –≤—Ö–æ–¥ –∏–∑ left/kicked ‚Üí member/restricted
    if old_status in ['left', 'kicked'] and new_status in ['member', 'restricted']:
        user = chat_member.new_chat_member.user
        print(f"[welcome_join] –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è user={user.id} ({user.full_name})")
        try:
            kwargs = {
                'chat_id': chat.id,
                'text': (
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {mention_html(user.id, user.first_name)}!\n"
                    "–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å :)"
                ),
                'parse_mode': 'HTML'
            }
            if thread_id:
                kwargs['message_thread_id'] = thread_id
            print(f"[welcome_join] –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {kwargs}")
            await context.bot.send_message(**kwargs)
        except Exception as e:
            print(f"[welcome_join] –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
    else:
        print("[welcome_join] —É—Å–ª–æ–≤–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
