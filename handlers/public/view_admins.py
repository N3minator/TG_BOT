from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.constants import ParseMode
from telegram.helpers import mention_html
from telegram.ext import ContextTypes, MessageHandler, CallbackQueryHandler, filters

from handlers.admin.moderation_db import get_all_user_roles, get_all_roles_with_levels


# üìå –ü–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç ChatMember –∏–ª–∏ None
async def get_user_or_none(chat_id: int, user_id: int, context: ContextTypes.DEFAULT_TYPE):
    try:
        return await context.bot.get_chat_member(chat_id, user_id)
    except Exception:
        return None


# üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∞–¥–º–∏–Ω–∞–º–∏
async def build_admins_page(chat_id: int, context: ContextTypes.DEFAULT_TYPE, owner_id: int):
    user_roles = get_all_user_roles(chat_id)
    all_roles = get_all_roles_with_levels(chat_id)

    if not user_roles or not all_roles:
        return "‚ùå –í —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤.", None

    sorted_roles = sorted(all_roles.items(), key=lambda x: x[1])
    role_to_users = {}
    for user_id, role in user_roles:
        role_to_users.setdefault(role, []).append(user_id)

    lines = ["üìã <b>–ö–∞—Å—Ç–æ–º–Ω—ã–µ —Ä–æ–ª–∏:</b>"]
    for role, level in sorted_roles:
        users = role_to_users.get(role, [])
        if users:
            mentions = []
            for uid in users:
                member = await get_user_or_none(chat_id, uid, context)
                if member and member.user.username:
                    mentions.append(f"@{member.user.username}")
                else:
                    mentions.append(mention_html(uid, f"@id{uid}"))
            lines.append(f"‚Ä¢ <b>{role}</b> (lvl {level}) ‚Äî {', '.join(mentions)}")

    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üìú –†–æ–ª–∏", callback_data=f"view_roles|{owner_id}")]
    ])
    return "\n".join(lines), keyboard


# üìú –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ä–æ–ª—è–º–∏
async def build_roles_page(chat_id: int, owner_id: int):
    roles = get_all_roles_with_levels(chat_id)
    if not roles:
        return "‚ùå –†–æ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", None

    sorted_roles = sorted(roles.items(), key=lambda x: x[1])
    lines = ["üìñ <b>–°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π:</b>"]
    for role, lvl in sorted_roles:
        lines.append(f"‚Ä¢ <b>{role}</b> ‚Äî —É—Ä–æ–≤–µ–Ω—å <b>{lvl}</b>")

    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("üëÆ –ê–¥–º–∏–Ω—ã", callback_data=f"view_admins|{owner_id}")]
    ])
    return "\n".join(lines), keyboard


# üß† –ö–æ–º–∞–Ω–¥–∞ !view-admins
async def view_admins_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    if not message:
        return

    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    text, keyboard = await build_admins_page(chat_id, context, user_id)
    await message.reply_text(text, parse_mode=ParseMode.HTML, reply_markup=keyboard)


# üîÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
async def view_admins_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    chat_id = query.message.chat.id
    user_id = query.from_user.id

    try:
        action, owner_id = query.data.split("|")
        owner_id = int(owner_id)
    except ValueError:
        await query.answer("–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", show_alert=True)
        return

    # üîí –ó–∞—â–∏—Ç–∞ –æ—Ç —á—É–∂–∏—Ö –∫–ª–∏–∫–æ–≤
    if user_id != owner_id:
        await query.answer("‚õî –¢–æ–ª—å–∫–æ –≤—ã–∑—ã–≤–∞—é—â–∏–π –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–∞–Ω–µ–ª—å—é.", show_alert=True)
        return

    if action == "view_roles":
        text, keyboard = await build_roles_page(chat_id, owner_id)
    elif action == "view_admins":
        text, keyboard = await build_admins_page(chat_id, context, owner_id)
    else:
        return

    await query.edit_message_text(text=text, parse_mode=ParseMode.HTML, reply_markup=keyboard)


# üì¶ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
view_admins_handler_obj = MessageHandler(
    filters.TEXT & filters.Regex(r"^!view-admins"), view_admins_handler
)

view_admins_callback_obj = CallbackQueryHandler(
    view_admins_callback, pattern=r"^view_.*\\|"
)
